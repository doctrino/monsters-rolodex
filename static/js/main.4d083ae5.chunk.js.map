{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","monster","className","alt","src","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","updateSearchField","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAGaA,EAAO,SAAAC,GAChB,IAAMC,EAAUD,EAAMC,QACtB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAQI,GAAlC,eACtB,mCAAMJ,EAAQK,QACd,kCAAKL,EAAQM,aCLZC,EAAW,SAAAR,GACpB,OAAQ,qBAAKE,UAAU,YAAf,SACJF,EAAMS,SAASC,KAAI,SAAAT,GAAO,OACtB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,UCHlBM,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OAAQ,uBAAOX,UAAU,SAASY,KAAK,SAASF,YAAaA,EAC9CG,SAAUF,MCgCdG,E,kDAhCX,WAAYhB,GAAQ,IAAD,8BACf,cAAMA,IAaViB,kBAAoB,SAACC,GACjB,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAbrC,EAAKC,MAAQ,CACTd,SAAU,GACVW,YAAa,IAJF,E,qDAQnB,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACV,SAAUmB,S,oBAOhD,WAAU,IAAD,EAC2BC,KAAKN,MAA9Bd,EADF,EACEA,SAAUW,EADZ,EACYA,YACXU,EAAmBrB,EAASsB,QAAO,SAAA9B,GAAO,OAAIA,EAAQK,KAAK0B,cAAcC,SAASb,EAAYY,kBACpG,OACI,sBAAK9B,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CAAWU,YAAY,kBACZC,aAAcgB,KAAKZ,oBAC9B,cAAC,EAAD,CAAUR,SAAUqB,W,GA3BlBI,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4d083ae5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\n\r\nexport const Card = props => {\r\n    const monster = props.monster;\r\n    return (\r\n        <div className=\"card-container\">\r\n            <img alt=\"monster\" src={`https://robohash.org/${monster.id}?set=set2`}/>\r\n            <h2> {monster.name}</h2>\r\n            <p> {monster.email}</p>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport './card-list.style.css'\r\nimport {Card} from \"../card/card.component\";\r\n\r\nexport const CardList = props => {\r\n    return (<div className=\"card-list\">{\r\n        props.monsters.map(monster => (\r\n            <Card key={monster.id} monster={monster} />\r\n        ))\r\n    }</div>);\r\n};\r\n","import React from 'react';\r\nimport './search-box.style.css'\r\n\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => {\r\n    return (<input className=\"search\" type=\"search\" placeholder={placeholder}\r\n                   onChange={handleChange}/>);\r\n}\r\n","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport {CardList} from \"./components/card-list/card-list.component\";\r\nimport {SearchBox} from \"./components/search-box/search-box.component\";\r\n\r\nclass App extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            monsters: [],\r\n            searchField: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n            .then(response => response.json())\r\n            .then(users => this.setState({monsters: users}))\r\n    }\r\n\r\n    updateSearchField = (e) => {\r\n        this.setState({searchField: e.target.value})\r\n    }\r\n\r\n    render() {\r\n        const {monsters, searchField} = this.state;\r\n        const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()))\r\n        return (\r\n            <div className=\"App\">\r\n                <h1>Monsters Rolodex</h1>\r\n                <SearchBox placeholder=\"search monsters\"\r\n                           handleChange={this.updateSearchField}/>\r\n                <CardList monsters={filteredMonsters}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}